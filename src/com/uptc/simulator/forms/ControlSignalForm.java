package com.uptc.simulator.forms;

import javax.swing.*;
import java.awt.*;

public class ControlSignalForm {
  private JPanel controlSignalPanel;
  private JCheckBox COCheckBox;
  private JCheckBox AOCheckBox;
  private JCheckBox ROCheckBox;
  private JCheckBox IOCheckBox;
  private JCheckBox EOCheckBox;
  private JCheckBox CECheckBox;
  private JCheckBox IICheckBox;
  private JCheckBox OICheckBox;
  private JCheckBox MICheckBox;
  private JCheckBox AICheckBox;
  private JCheckBox BICheckBox;

  private void createUIComponents() {
    COCheckBox = new JCheckBox();
    AOCheckBox = new JCheckBox();
    ROCheckBox = new JCheckBox();
    IOCheckBox = new JCheckBox();
    EOCheckBox = new JCheckBox();
    CECheckBox = new JCheckBox();
    IICheckBox = new JCheckBox();
    OICheckBox = new JCheckBox();
    MICheckBox = new JCheckBox();
    AICheckBox = new JCheckBox();
    BICheckBox = new JCheckBox();
  }

  public boolean programCounterOutSignal() { return COCheckBox.isSelected(); }
  public boolean aRegisterOutSignal() { return AOCheckBox.isSelected(); }
  public boolean ramOutSignal() { return COCheckBox.isSelected(); }
  public boolean instructionRegisterOutSignal() { return IOCheckBox.isSelected(); }
  public boolean aritmeticLogicUnitOutSignal() { return EOCheckBox.isSelected(); }
  public boolean counterEnableSignal() { return CECheckBox.isSelected(); }
  public boolean instructionRegisterInSignal() { return IICheckBox.isSelected(); }
  public boolean outputRegisterInSignal() { return OICheckBox.isSelected(); }
  public boolean memoryAddressRegisterInSignal() { return MICheckBox.isSelected(); }
  public boolean aRegisterInSignal() { return AICheckBox.isSelected(); }
  public boolean bRegisterInSignal() { return BICheckBox.isSelected(); }

  public void nextPulse() {
    if (programCounterOutSignal() && memoryAddressRegisterInSignal()) {
      this.updateBus();

    }
  }



  {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
    $$$setupUI$$$();
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer
   * >>> IMPORTANT!! <<<
   * DO NOT edit this method OR call it in your code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$() {
    createUIComponents();
    controlSignalPanel = new JPanel();
    controlSignalPanel.setLayout(new GridBagLayout());
    final JPanel panel1 = new JPanel();
    panel1.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
    GridBagConstraints gbc;
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 1;
    controlSignalPanel.add(panel1, gbc);
    COCheckBox.setHorizontalAlignment(0);
    COCheckBox.setHorizontalTextPosition(0);
    COCheckBox.setPreferredSize(new Dimension(30, 43));
    COCheckBox.setText("CO");
    COCheckBox.setToolTipText("Program Counter Out");
    COCheckBox.setVerticalTextPosition(3);
    panel1.add(COCheckBox);
    AOCheckBox.setHorizontalAlignment(0);
    AOCheckBox.setHorizontalTextPosition(0);
    AOCheckBox.setPreferredSize(new Dimension(30, 43));
    AOCheckBox.setText("AO");
    AOCheckBox.setToolTipText("A Register Out");
    AOCheckBox.setVerticalTextPosition(3);
    panel1.add(AOCheckBox);
    ROCheckBox.setHorizontalAlignment(0);
    ROCheckBox.setHorizontalTextPosition(0);
    ROCheckBox.setPreferredSize(new Dimension(30, 43));
    ROCheckBox.setText("RO");
    ROCheckBox.setToolTipText("RAM Out");
    ROCheckBox.setVerticalTextPosition(3);
    panel1.add(ROCheckBox);
    IOCheckBox.setHorizontalAlignment(0);
    IOCheckBox.setHorizontalTextPosition(0);
    IOCheckBox.setPreferredSize(new Dimension(30, 43));
    IOCheckBox.setText("IO");
    IOCheckBox.setToolTipText("Instruction Register Out");
    IOCheckBox.setVerticalTextPosition(3);
    panel1.add(IOCheckBox);
    EOCheckBox.setHorizontalAlignment(0);
    EOCheckBox.setHorizontalTextPosition(0);
    EOCheckBox.setPreferredSize(new Dimension(30, 43));
    EOCheckBox.setText("EO");
    EOCheckBox.setToolTipText("Arithmetic Logic Unit Out");
    EOCheckBox.setVerticalTextPosition(3);
    panel1.add(EOCheckBox);
    CECheckBox.setHorizontalAlignment(0);
    CECheckBox.setHorizontalTextPosition(0);
    CECheckBox.setMargin(new Insets(2, 2, 2, 2));
    CECheckBox.setPreferredSize(new Dimension(30, 43));
    CECheckBox.setText("CE");
    CECheckBox.setToolTipText("Counter Enable");
    CECheckBox.setVerticalTextPosition(3);
    panel1.add(CECheckBox);
    final JPanel panel2 = new JPanel();
    panel2.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 2;
    gbc.anchor = GridBagConstraints.WEST;
    controlSignalPanel.add(panel2, gbc);
    MICheckBox.setHorizontalAlignment(0);
    MICheckBox.setHorizontalTextPosition(0);
    MICheckBox.setPreferredSize(new Dimension(30, 43));
    MICheckBox.setText("MI");
    MICheckBox.setToolTipText("Memory Address Register In");
    MICheckBox.setVerticalTextPosition(3);
    panel2.add(MICheckBox);
    AICheckBox.setHorizontalAlignment(0);
    AICheckBox.setHorizontalTextPosition(0);
    AICheckBox.setPreferredSize(new Dimension(30, 43));
    AICheckBox.setText("AI");
    AICheckBox.setToolTipText("A Register In ");
    AICheckBox.setVerticalTextPosition(3);
    panel2.add(AICheckBox);
    BICheckBox.setHorizontalAlignment(0);
    BICheckBox.setHorizontalTextPosition(0);
    BICheckBox.setPreferredSize(new Dimension(30, 43));
    BICheckBox.setText("BI");
    BICheckBox.setToolTipText("B Register In");
    BICheckBox.setVerticalTextPosition(3);
    panel2.add(BICheckBox);
    IICheckBox.setHorizontalAlignment(0);
    IICheckBox.setHorizontalTextPosition(0);
    IICheckBox.setPreferredSize(new Dimension(30, 43));
    IICheckBox.setText("II");
    IICheckBox.setToolTipText("Instruction Register In");
    IICheckBox.setVerticalTextPosition(3);
    panel2.add(IICheckBox);
    OICheckBox.setHorizontalAlignment(0);
    OICheckBox.setHorizontalTextPosition(0);
    OICheckBox.setPreferredSize(new Dimension(30, 43));
    OICheckBox.setText("OI");
    OICheckBox.setToolTipText("Output Register In");
    OICheckBox.setVerticalTextPosition(3);
    panel2.add(OICheckBox);
    final JLabel label1 = new JLabel();
    label1.setText("Control Signal Panel");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 0;
    controlSignalPanel.add(label1, gbc);
  }

  /**
   * @noinspection ALL
   */
  public JComponent $$$getRootComponent$$$() {
    return controlSignalPanel;
  }

}
