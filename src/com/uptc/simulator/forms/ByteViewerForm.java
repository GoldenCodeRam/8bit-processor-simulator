package com.uptc.simulator.forms;

import com.uptc.simulator.model.BinaryRepresentation;

import javax.swing.*;
import java.awt.*;

public class ByteViewerForm {
  private JPanel byteViewerForm;
  private JPanel byte0;
  private JPanel byte1;
  private JPanel byte2;
  private JPanel byte3;
  private JPanel byte4;
  private JPanel byte5;
  private JPanel byte6;
  private JPanel byte7;

  private final int BYTE_AMOUNT = 8;
  private final Color _disabledColor = new Color(111, 123, 126);
  private final Color _onColor = new Color(126, 196, 88);
  private final Color _offColor = new Color(41, 65, 29);
  private final BinaryRepresentation _binaryRepresentation = new BinaryRepresentation(BYTE_AMOUNT);

  private JPanel[] _bytePanels;
  private int _activeBits = BYTE_AMOUNT;

  public void setActiveBits(int amount) {
    if (amount > BYTE_AMOUNT) {
      amount = BYTE_AMOUNT;
    }
    _activeBits = amount;
    for (int i = 7 - amount; i >= 0; i--) {
      _bytePanels[i].setBackground(_disabledColor);
    }
  }

  public void setByte(String value) {
    StringBuilder newByte = new StringBuilder();
    for (int i = 0; i < 8 - value.length(); i++) {
      newByte.append("0");
    }
    newByte.append(value);
    _binaryRepresentation.setRepresentation(newByte.toString());
    this.updateByteView();
  }

  public void increaseByte() {
    _binaryRepresentation.add();
    this.updateByteView();
  }

  public String getByte() {
    return _binaryRepresentation.getValue();
  }

  private void updateByteView() {
    char[] bits = _binaryRepresentation.getValue().toCharArray();
    for (int i = BYTE_AMOUNT - 1; i >= BYTE_AMOUNT - _activeBits; i--) {
      if (bits[i] == '1') {
        _bytePanels[i].setBackground(_onColor);
      } else {
        _bytePanels[i].setBackground(_offColor);
      }
    }
  }

  private void createUIComponents() {
    byte0 = new JPanel();
    byte1 = new JPanel();
    byte2 = new JPanel();
    byte3 = new JPanel();
    byte4 = new JPanel();
    byte5 = new JPanel();
    byte6 = new JPanel();
    byte7 = new JPanel();

    _bytePanels = new JPanel[]{
      byte0, byte1, byte2, byte3, byte4, byte5, byte6, byte7
    };
  }


  {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
    $$$setupUI$$$();
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer
   * >>> IMPORTANT!! <<<
   * DO NOT edit this method OR call it in your code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$() {
    createUIComponents();
    byteViewerForm = new JPanel();
    byteViewerForm.setLayout(new GridBagLayout());
    final JPanel panel1 = new JPanel();
    panel1.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
    GridBagConstraints gbc;
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 1;
    byteViewerForm.add(panel1, gbc);
    byte0.setBackground(new Color(-14073571));
    byte0.setPreferredSize(new Dimension(24, 24));
    panel1.add(byte0);
    byte1.setBackground(new Color(-14073571));
    byte1.setPreferredSize(new Dimension(24, 24));
    panel1.add(byte1);
    byte2.setBackground(new Color(-14073571));
    byte2.setPreferredSize(new Dimension(24, 24));
    panel1.add(byte2);
    byte3.setBackground(new Color(-14073571));
    byte3.setPreferredSize(new Dimension(24, 24));
    panel1.add(byte3);
    byte4.setBackground(new Color(-14073571));
    byte4.setPreferredSize(new Dimension(24, 24));
    panel1.add(byte4);
    byte5.setBackground(new Color(-14073571));
    byte5.setPreferredSize(new Dimension(24, 24));
    panel1.add(byte5);
    byte6.setBackground(new Color(-14073571));
    byte6.setPreferredSize(new Dimension(24, 24));
    panel1.add(byte6);
    byte7.setBackground(new Color(-14073571));
    byte7.setPreferredSize(new Dimension(24, 24));
    panel1.add(byte7);
    final JLabel label1 = new JLabel();
    label1.setHorizontalAlignment(0);
    label1.setHorizontalTextPosition(0);
    label1.setText("Bytes");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 0;
    byteViewerForm.add(label1, gbc);
  }

  /**
   * @noinspection ALL
   */
  public JComponent $$$getRootComponent$$$() {
    return byteViewerForm;
  }

}
